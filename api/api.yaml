openapi: 3.0.1
info:
  title: Shop
  version: 1.0.0

paths:
  /user/login:
    post:
      tags:
        - users
      summary: Logs in the user specified
      operationId: loginUser
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          headers:
            X-Expires-After:
              description: date in UTC when token expires
              schema:
                type: string
                format: date-time
          content:
            application/json:
              schema:
                type: string
        400:
          description: Invalid username/password supplied
          content: {}

  /user/logout:
    post:
      tags:
        - users
      summary: Logs out current logged in user session
      operationId: logoutUser
      responses:
        200:
          description: successful logout
          content: {}

  /link:
    get:
      tags:
        - link
      summary: List of links
      operationId: ListItems
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Link'
        400:
          description: Invalid request
          content: {}
      security:
        - api_key: []
    post:
      tags:
        - link
      summary: Generate a new link
      operationId: CreateLink
      requestBody:
        description: Link object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Link'
        required: true
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkResponse'

        405:
          description: Invalid input
          content: {}
      security:
        - api_key: []


  /link/{linkId}:
    get:
      tags:
        - link
      summary: Find link by ID
      operationId: GetLink
      parameters:
        - name: linkId
          in: path
          description: Id of link to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Link'
        400:
          description: Invalid Id supplied
          content: {}
      security:
        - api_key: []

  /stat:
    get:
      tags:
        - stat
      summary: List of links
      operationId: ListStat
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Stat'
        400:
          description: Invalid request
          content: {}
      security:
        - api_key: []
    post:
      tags:
        - stat
      summary: Generate a new link
      operationId: CreateStat
      requestBody:
        description: Link object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Link'
        required: true
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stat'
        405:
          description: Invalid input
          content: {}
      security:
        - api_key: []

  /stat/{statId}:
    get:
      tags:
        - stat
      summary: Get stat for link Id
      operationId: GetStat
      parameters:
        - name: statId
          in: path
          description: Id of item to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stat'
        400:
          description: Invalid Id supplied
          content: {}
      security:
        - api_key: []


components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        email:
          type: string
        password:
          type: string

    Link:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        origin:
          type: string
        short:
          type: string
        use_amount:
          type: integer
          format: int64

    LinkResponse:
      type: object
      properties:
        short:
          type: string
        statlink:
          type: string

    Stat:
      type: object
      properties:
        visits:
          type: integer
          format: int64


  securitySchemes:
    api_key:
      type: apiKey
      name: api_key
      in: header